<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on D-V-J</title>
    <link>https://dbpatankar.github.io/posts/</link>
    <description>Recent content in Posts on D-V-J</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Dec 2022 03:41:50 +0530</lastBuildDate><atom:link href="https://dbpatankar.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My custom emacs config</title>
      <link>https://dbpatankar.github.io/posts/my-custom-emacs-config/</link>
      <pubDate>Wed, 28 Dec 2022 03:41:50 +0530</pubDate>
      
      <guid>https://dbpatankar.github.io/posts/my-custom-emacs-config/</guid>
      <description>When I started learning/using linux, choice of text editor was an alien concept to me. So I used whichever editor I found first. I liked kate a lot and used it for a long time until I discovered vim and its powers. Since then I have been using vim and have no major deal-breaking issues with it. Yet somehow curiosity made me explore GNU emacs. And now for past one year I am using GNU emacs for all the text editing stuff.</description>
    </item>
    
    <item>
      <title>Nuances of $\LaTeX$ typesetting - d for derivative</title>
      <link>https://dbpatankar.github.io/posts/latex-nuances-derivative/</link>
      <pubDate>Wed, 09 Nov 2022 14:07:22 +0530</pubDate>
      
      <guid>https://dbpatankar.github.io/posts/latex-nuances-derivative/</guid>
      <description>If you often use $\LaTeX$ for typesetting math then you probably have come across the issue of typesetting d of infinitesimal small quantity dx. As per the standards, the d should be typed upright. But if you write dx in $\LaTeX$ math mode as $dx$, it will result in tilted d. In this article, we will explore a few ways of typesetting the d correctly in $\LaTeX$ math environment.</description>
    </item>
    
    <item>
      <title>Julia: contour plots</title>
      <link>https://dbpatankar.github.io/posts/julia-contour/</link>
      <pubDate>Sat, 01 Oct 2022 18:55:13 +0530</pubDate>
      
      <guid>https://dbpatankar.github.io/posts/julia-contour/</guid>
      <description>Plots library in julia is very powerful for plotting and I have rarely needed any other plotting library. However its documentation seems lacking in explaining its features, especially when you want to plot contours. So this page explains some of the common features of the function contour() which I need to use often.
Data Lets consider a grid as shown in figure below. Each dot on the grid is a point with (x, y) coordinate pair and has an associated value of elevation of the point from ground level (z).</description>
    </item>
    
    <item>
      <title>Method of weighted residuals</title>
      <link>https://dbpatankar.github.io/posts/fem-weighted-res/</link>
      <pubDate>Sat, 01 Oct 2022 01:15:55 +0530</pubDate>
      
      <guid>https://dbpatankar.github.io/posts/fem-weighted-res/</guid>
      <description>In Finite Element Method, the discussion often begins with something called as statement of weighted residuals. So let us explore what it means to me.
Some background Let us say we have a differential equation given by \eqref{eq:gde} with boundary condition as $y = 0$ at $x = 0$ and let us restrict ourselves to the domain $x \in [0, 1]$. \begin{equation} \dfrac{\mathrm{d}y}{\mathrm{d}x} = 3 x^{2} \label{eq:gde} \end{equation}
Solution of this differential equation can be obtained very easily by integrating both sides and then eliminating the constant term using boundary condition.</description>
    </item>
    
  </channel>
</rss>
